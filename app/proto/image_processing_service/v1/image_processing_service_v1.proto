syntax = "proto3";

package image_processing_service;
import "image_processing_service_v1_messages.proto";
option go_package = "image_processing_service/v1/protos";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";


option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    schemes : HTTP;
    // schemes: HTTPS;
    consumes : "application/json";
    produces : "application/json";
  
    info : {
      title:
        "Image processing service";
      version:
        "1.0";
      contact: {
      name:
        "Falokut";
      url:
        "https://github.com/Falokut";
      email:
        "timur.sinelnik@yandex.ru";
      };
    }
    responses : {
      key:"500";
      value: {
      description: "Something went wrong.";
        schema:{
          json_schema: {
            ref:
              "#/definitions/rpcStatus";
          }
        }
      }
    }
};


service ImageProcessingServiceV1 {
    rpc Crop(CropRequest) returns(google.api.HttpBody) {
      option (google.api.http) = {
        post: "/v1/crop"
        body: "*"
      };
    };

    rpc Resize(ResizeRequest) returns(google.api.HttpBody) {
      option (google.api.http) = {
        post: "/v1/resize"
        body: "*"
      };
    };
    
    rpc Validate(ValidateRequest) returns(ValidateResponce) {
      option (google.api.http) = {
        post: "/v1/validate"
        body: "*"
      };
    }

    rpc Desaturate(Image) returns(google.api.HttpBody) {
      option (google.api.http) = {
        post: "/v1/desaturate"
        body: "*"
      };
    }

    rpc Hue(HueRequest) returns(google.api.HttpBody) {
      option (google.api.http) = {
        post: "/v1/hue"
        body: "*"
      };
    }

    rpc Blur(BlurRequest) returns(google.api.HttpBody) {
      option (google.api.http) = {
        post: "/v1/blur"
        body: "*"
      };
    }
}

